import { DownloadIcon } from "@chakra-ui/icons";
import {
  Button,
  Flex,
  Img,
  Modal,
  ModalBody,
  ModalContent,
  ModalFooter,
  ModalHeader,
  ModalOverlay,
  Text,
  useBreakpointValue,
  useColorModeValue,
} from "@chakra-ui/react";
import PropTypes from "prop-types";
import { saveAs } from "file-saver";

export default function PreviewImage({ item, isOpen, onClose }) {
  const textColor = useColorModeValue("white", "black");
  const size = useBreakpointValue({ base: "xl", md: "3xl" });
  const fontSize = useBreakpointValue({ base: "lg", md: "md" });
  const saveFile = () => {
    saveAs(item.image, item.image);
  };

  return (
    <Modal
      isCentered
      scrollBehavior="inside"
      size={size}
      isOpen={isOpen}
      onClose={onClose}
      motionPreset="slideInBottom"
      preserveScrollBarGap
    >
      <ModalOverlay />
      <ModalContent>
        <ModalHeader>
          <Flex mb={-3}>
            <Text color={textColor} pl={1} fontSize="lg">
              Generated by
            </Text>
            <Text color="red" pl={1} fontSize="lg" fontWeight="bold">
              {item.generatedBy}
            </Text>
          </Flex>
        </ModalHeader>
        <ModalBody>
          <Img borderRadius={["sm", null, "md"]} mt={0} src={item.image} />
          <Text
            color={textColor}
            align="center"
            mt={2}
            pl={1}
            fontSize={fontSize}
            noOfLines={[1, 2, 3]}
          >
            {item.promptText}
          </Text>
        </ModalBody>
        <ModalFooter>
          <Button
            backgroundColor={textColor}
            _hover={{ bg: "red", textColor: "black" }}
            position="relative"
            rightIcon={<DownloadIcon />}
            onClick={saveFile}
          >
            Save Image
          </Button>
          <Button
            backgroundColor={textColor}
            _hover={{ bg: "red", textColor: "black" }}
            ml={3}
            onClick={onClose}
          >
            Close
          </Button>
        </ModalFooter>
      </ModalContent>
    </Modal>
  );
}

PreviewImage.propTypes = {
  isOpen: PropTypes.bool.isRequired,
  onClose: PropTypes.func.isRequired,
};
